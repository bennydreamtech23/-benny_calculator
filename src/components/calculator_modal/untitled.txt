import { useState } from "react";
import styles from "./Calculator_modal.module.scss";

function Calculator() {
  //TODO: implement the on/off button
  const [isOn, setIsOn] = useState<boolean>(false);
  //TODO: implement logic of the calculator interface!
  let [result, setResult] = useState<string>("");
  let [prevNumber, setPrevNumber] = useState<string>("");
  let [operator, setOperator] = useState<string>("");
  let [answer, setAnswer] = useState<string>("");
  let operatorsarray = ["+", "-", "/", "*"];
  let lastChar = result[result.length - 1];

  const handleNumberClick = (num: string) => {
    if (result === "0") {
      setResult(num);
    } else {
      setResult((result += num));
    }
    setAnswer("");
  };

  const handleOperatorClick = (op:string) => {
    setAnswer("");
    if (result === "" && op !== "-") return;
    setOperator(op);
    console.log(result);
    switch (op) {
      case "+":
      case "-":
      case "*":
      case "/":
        if (operatorsarray.indexOf(op) > -1) {
          if (operatorsarray.indexOf(lastChar) === -1) {
            setResult((result += op));
          } else console.log(operatorsarray.includes(lastChar));

          if (op === lastChar || operatorsarray.includes(lastChar)) {
            //handlebackSpace();
            let newResult = result.substring(0, result.length - 1);
            setResult((newResult += op));
          }
        }
        break;
      default:
        return;
    }
  };

  const handleClearClick = () => {
    setResult("");
    setPrevNumber("");
    setOperator("");
    setAnswer("");
  };

  const handleEqualsClick = () => {
    if (operatorsarray.includes(lastChar)) {
      setResult(result.substring(0, result.length - 1));
      setAnswer(eval(result));
    }
    setAnswer(eval(result));
    setPrevNumber("");
    setOperator("");
  };

  const handleOnClick = () => {
    setIsOn(!isOn);
    setResult("");
    setAnswer("");
  };

  return (
    <div className={styles.calculator}>
      <h1 className={styles.title}>Benny's Calculator</h1>
      <input
        data-testid="display"
        className={styles.displayTab}
        type="text"
        disabled
        value={result}
        style={
          isOn ? { backgroundColor: "#7CE4DC" } : { backgroundColor: "#A2ECE6" }
        }
      ></input>
      <input
        data-testid="answer"
        className={styles.answerTab}
        type="text"
        disabled
        value={answer}
        style={
          isOn ? { backgroundColor: "#56DDD2" } : { backgroundColor: "#A2ECE6" }
        }
      ></input>

      <div className={styles.btn_container}>
        <button
          className={`${styles.btn} ${styles.on}`}
          onClick={() => handleOnClick()}
        >
          {isOn ? "ON" : "OFF"}
        </button>
        <button
          data-testid="btn-clear"
          className={`${styles.btn} ${styles.wide}`}
          onClick={() => handleClearClick()}
          disabled={!isOn}
        >
          C
        </button>

        <button
          // data-testid="btn-clear"
          className={`${styles.btn} ${styles.wide}`}
          // onClick={() => handleClearClick()}
          disabled={!isOn}
        >
          Del
        </button>
        <button
          data-testid="btn-div"
          className={styles.btn}
          onClick={() => handleOperatorClick("/")}
          disabled={!isOn}
        >
          /
        </button>

        <button
          data-testid="btn-7"
          className={styles.btn}
          onClick={() => handleNumberClick("7")}
          disabled={!isOn}
        >
          7
        </button>
        <button
          data-testid="btn-8"
          className={styles.btn}
          onClick={() => handleNumberClick("8")}
          disabled={!isOn}
        >
          8
        </button>
        <button
          data-testid="btn-9"
          className={styles.btn}
          onClick={() => handleNumberClick("9")}
          disabled={!isOn}
        >
          9
        </button>
        <button
          data-testid="btn-mul"
          className={styles.btn}
          onClick={() => handleOperatorClick("*")}
          disabled={!isOn}
        >
          *
        </button>

        <button
          data-testid="btn-4"
          className={styles.btn}
          onClick={() => handleNumberClick("4")}
          disabled={!isOn}
        >
          4
        </button>
        <button
          data-testid="btn-5"
          className={styles.btn}
          onClick={() => handleNumberClick("5")}
          disabled={!isOn}
        >
          5
        </button>
        <button
          data-testid="btn-6"
          className={styles.btn}
          onClick={() => handleNumberClick("6")}
          disabled={!isOn}
        >
          6
        </button>
        <button
          data-testid="btn-sub"
          className={styles.btn}
          onClick={() => handleOperatorClick("-")}
          disabled={!isOn}
        >
          -
        </button>

        <button
          data-testid="btn-1"
          className={styles.btn}
          onClick={() => handleNumberClick("1")}
          disabled={!isOn}
        >
          1
        </button>
        <button
          data-testid="btn-2"
          className={styles.btn}
          onClick={() => handleNumberClick("2")}
          disabled={!isOn}
        >
          2
        </button>
        <button
          data-testid="btn-3"
          className={styles.btn}
          onClick={() => handleNumberClick("3")}
          disabled={!isOn}
        >
          3
        </button>
        <button
          data-testid="btn-add"
          className={styles.btn}
          onClick={() => handleOperatorClick("+")}
          disabled={!isOn}
        >
          +
        </button>

        <button
          data-testid="btn-0"
          className={styles.btn}
          onClick={() => handleNumberClick("0")}
          disabled={!isOn}
        >
          0
        </button>
        <button
          data-testid="btn-eval"
          className={styles.btn}
          onClick={() => handleEqualsClick()}
          disabled={!isOn}
        >
          =
        </button>
        <button
          //data-testid="btn-eval"
          className={styles.btn}
          // onClick={() => handleEqualsClick()}
          disabled={!isOn}
        >
          .
        </button>
      </div>
    </div>
  );
}

export default Calculator;
